import React, { useState, useEffect } from 'react';
import Layout from '../components/layout/Layout';
import '../styles/global-design-system.css';

const Settings = () => {
  const [activeTab, setActiveTab] = useState('system');
  const [settings, setSettings] = useState({
    companyName: 'UK Commission Admin Panel',
    currency: 'GBP',
    dateFormat: 'DD/MM/YYYY',
    timezone: 'Europe/London',
    emailNotifications: true,
    smsNotifications: false,
    autoBackup: true
  });

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({ ...prev, [key]: value }));
  };

  return (
    <Layout>
      <div className="module-content slide-up">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã */}
        <div className="grid grid-4 mb-lg">
          <div className="stat-card">
            <div className="stat-icon">‚öôÔ∏è</div>
            <div className="stat-content">
              <h3>–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
              <p className="stat-value">24</p>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">üë•</div>
            <div className="stat-content">
              <h3>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ</h3>
              <p className="stat-value">18</p>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">üîê</div>
            <div className="stat-content">
              <h3>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
              <p className="stat-value">12</p>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">ÔøΩÔøΩÔøΩ</div>
            <div className="stat-content">
              <h3>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              <p className="stat-value">8</p>
            </div>
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º */}
        <div className="nav-bar mb-lg">
          <button
            className={`nav-tab ${activeTab === 'system' ? 'active' : ''}`}
            onClick={() => setActiveTab('system')}
          >
            ‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞
          </button>
          <button
            className={`nav-tab ${activeTab === 'users' ? 'active' : ''}`}
            onClick={() => setActiveTab('users')}
          >
            üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
          </button>
          <button
            className={`nav-tab ${activeTab === 'security' ? 'active' : ''}`}
            onClick={() => setActiveTab('security')}
          >
            üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
          </button>
          <button
            className={`nav-tab ${activeTab === 'notifications' ? 'active' : ''}`}
            onClick={() => setActiveTab('notifications')}
          >
            üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
          </button>
        </div>

        {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        {activeTab === 'system' && (
          <div className="space-y-lg">
            <div className="card">
              <div className="card-header">
                <h2 className="section-title">‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h2>
                <button className="btn btn-primary">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
              </div>

              <div className="grid grid-2">
                <div className="glass-panel p-lg">
                  <h3>–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                  <div className="space-y-4 mt-md">
                    <div className="form-group">
                      <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                      <input
                        type="text"
                        className="form-input"
                        value={settings.companyName}
                        onChange={(e) => handleSettingChange('companyName', e.target.value)}
                      />
                    </div>

                    <div className="form-group">
                      <label className="form-label">–í–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</label>
                      <select
                        className="form-input"
                        value={settings.currency}
                        onChange={(e) => handleSettingChange('currency', e.target.value)}
                      >
                        <option value="GBP">British Pound (¬£)</option>
                        <option value="EUR">Euro (‚Ç¨)</option>
                        <option value="USD">US Dollar ($)</option>
                      </select>
                    </div>

                    <div className="form-group">
                      <label className="form-label">–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã</label>
                      <select
                        className="form-input"
                        value={settings.dateFormat}
                        onChange={(e) => handleSettingChange('dateFormat', e.target.value)}
                      >
                        <option value="DD/MM/YYYY">DD/MM/YYYY (UK)</option>
                        <option value="MM/DD/YYYY">MM/DD/YYYY (US)</option>
                        <option value="YYYY-MM-DD">YYYY-MM-DD (ISO)</option>
                      </select>
                    </div>
                  </div>
                </div>

                <div className="glass-panel p-lg">
                  <h3>–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                  <div className="space-y-4 mt-md">
                    <div className="form-group">
                      <label className="form-label">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</label>
                      <select
                        className="form-input"
                        value={settings.timezone}
                        onChange={(e) => handleSettingChange('timezone', e.target.value)}
                      >
                        <option value="Europe/London">Europe/London (GMT)</option>
                        <option value="Europe/Berlin">Europe/Berlin (CET)</option>
                        <option value="America/New_York">America/New_York (EST)</option>
                      </select>
                    </div>

                    <div className="form-group">
                      <label className="form-label">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
                      <select className="form-input">
                        <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                        <option value="en">English</option>
                        <option value="de">Deutsch</option>
                      </select>
                    </div>

                    <div className="form-group">
                      <label className="form-label">–†–∞–±–æ—á–∏–µ –¥–Ω–∏</label>
                      <div className="flex gap-sm mt-sm">
                        {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'].map(day => (
                          <button key={day} className="btn btn-outline btn-small">
                            {day}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—åÔøΩÔøΩ–æ–≤–∞—Ç–µ–ª–µ–π */}
        {activeTab === 'users' && (
          <div className="card">
            <div className="card-header">
              <h2 className="section-title">üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –øÔøΩÔøΩ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
              <button className="btn btn-primary">+ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
            </div>

            <div className="space-y-lg">
              <div className="glass-panel p-lg">
                <h3>–ü–æ–ª–∏—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
                <div className="space-y-4 mt-md">
                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</strong>
                      <div className="text-secondary">–ö–∞–∂–¥—ã–µ 90 –¥–Ω–µ–π</div>
                    </div>
                    <label className="switch">
                      <input type="checkbox" defaultChecked />
                      <span className="slider"></span>
                    </label>
                  </div>

                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</strong>
                      <div className="text-secondary">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤</div>
                    </div>
                    <label className="switch">
                      <input type="checkbox" defaultChecked />
                      <span className="slider"></span>
                    </label>
                  </div>

                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞</strong>
                      <div className="text-secondary">–ü–æ—Å–ª–µ 30 –º–∏–Ω—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                    </div>
                    <label className="switch">
                      <input type="checkbox" />
                      <span className="slider"></span>
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
        {activeTab === 'security' && (
          <div className="card">
            <div className="card-header">
              <h2 className="section-title">üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
              <button className="btn btn-warning">üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏</button>
            </div>

            <div className="grid grid-2">
              <div className="glass-panel p-lg">
                <h3>–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h3>
                <div className="space-y-4 mt-md">
                  <div className="flex-between">
                    <span>–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞</span>
                    <span className="badge badge-success">20.12.2024</span>
                  </div>
                  <div className="flex-between">
                    <span>–£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</span>
                    <span className="badge badge-success">–í—ã—Å–æ–∫–∏–π</span>
                  </div>
                  <div className="flex-between">
                    <span>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π</span>
                    <span className="badge badge-info">24</span>
                  </div>
                  <div className="flex-between">
                    <span>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP</span>
                    <span className="badge badge-warning">3</span>
                  </div>
                </div>
              </div>

              <div className="glass-panel p-lg">
                <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞</h3>
                <div className="space-y-4 mt-md">
                  <div className="form-group">
                    <label className="form-label">–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞</label>
                    <input type="number" className="form-input" defaultValue="5" />
                  </div>

                  <div className="form-group">
                    <label className="form-label">–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–º–∏–Ω—É—Ç—ã)</label>
                    <input type="number" className="form-input" defaultValue="30" />
                  </div>

                  <div className="form-group">
                    <label className="form-label">–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞</label>
                    <textarea className="form-input" rows="3" placeholder="192.168.1.0/24"></textarea>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
        {activeTab === 'notifications' && (
          <div className="card">
            <div className="card-header">
              <h2 className="section-title">üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
              <button className="btn btn-primary">üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>
            </div>

            <div className="space-y-lg">
              <div className="glass-panel p-lg">
                <h3>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <div className="space-y-4 mt-md">
                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–ù–æ–≤—ã–µ –∫–æ–º–∏—Å—Å–∏–∏</strong>
                      <div className="text-secondary">–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏</div>
                    </div>
                    <label className="switch">
                      <input
                        type="checkbox"
                        checked={settings.emailNotifications}
                        onChange={(e) => handleSettingChange('emailNotifications', e.target.checked)}
                      />
                      <span className="slider"></span>
                    </label>
                  </div>

                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–µ–π</strong>
                      <div className="text-secondary">–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞</div>
                    </div>
                    <label className="switch">
                      <input type="checkbox" defaultChecked />
                      <span className="slider"></span>
                    </label>
                  </div>

                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</strong>
                      <div className="text-secondary">–°–≤–æ–¥–∫–∞ –∑–∞ –¥–µ–Ω—å</div>
                    </div>
                    <label className="switch">
                      <input type="checkbox" />
                      <span className="slider"></span>
                    </label>
                  </div>
                </div>
              </div>

              <div className="glass-panel p-lg">
                <h3>SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <div className="space-y-4 mt-md">
                  <div className="flex-between p-md glass-panel">
                    <div>
                      <strong>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è</strong>
                      <div className="text-secondary">–ü—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</div>
                    </div>
                    <label className="switch">
                      <input
                        type="checkbox"
                        checked={settings.smsNotifications}
                        onChange={(e) => handleSettingChange('smsNotifications', e.target.checked)}
                      />
                      <span className="slider"></span>
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –°—Ç–∏–ª–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π */}
      <style jsx>{`
        .switch {
          position: relative;
          display: inline-block;
          width: 50px;
          height: 24px;
        }

        .switch input {
          opacity: 0;
          width: 0;
          height: 0;
        }

        .slider {
          position: absolute;
          cursor: pointer;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: #ccc;
          -webkit-transition: .4s;
          transition: .4s;
          border-radius: 24px;
        }

        .slider:before {
          position: absolute;
          content: "";
          height: 18px;
          width: 18px;
          left: 3px;
          bottom: 3px;
          background-color: white;
          -webkit-transition: .4s;
          transition: .4s;
          border-radius: 50%;
        }

        input:checked + .slider {
          background: linear-gradient(45deg, #667eea, #764ba2);
        }

        input:checked + .slider:before {
          -webkit-transform: translateX(26px);
          -ms-transform: translateX(26px);
          transform: translateX(26px);
        }
      `}</style>
    </Layout>
  );
};

export default Settings;
