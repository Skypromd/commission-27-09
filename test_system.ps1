# UK Financial Services - PowerShell Test Script
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoints —Å–∏—Å—Ç–µ–º—ã

Write-Host "üöÄ UK FINANCIAL SERVICES - –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Gray

$baseUrl = "http://localhost:8000"
$testResults = @()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function Test-Endpoint {
    param(
        [string]$Url,
        [string]$Description
    )

    try {
        $response = Invoke-WebRequest -Uri $Url -Method GET -UseBasicParsing -TimeoutSec 5
        $statusCode = $response.StatusCode
        $contentLength = $response.Content.Length

        if ($statusCode -eq 200) {
            Write-Host "‚úÖ $Description" -ForegroundColor Green
            Write-Host "   URL: $Url" -ForegroundColor Gray
            Write-Host "   Status: $statusCode | Size: $contentLength bytes" -ForegroundColor Gray

            # –ï—Å–ª–∏ —ç—Ç–æ JSON, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if ($response.Headers.'Content-Type' -match 'application/json') {
                try {
                    $json = $response.Content | ConvertFrom-Json
                    if ($json.status) {
                        Write-Host "   Status: $($json.status)" -ForegroundColor Cyan
                    }
                    if ($json.version) {
                        Write-Host "   Version: $($json.version)" -ForegroundColor Cyan
                    }
                } catch {
                    # Ignore JSON parsing errors for display
                }
            }

            $script:testResults += @{
                Endpoint = $Description
                Url = $Url
                Status = "‚úÖ Success"
                Code = $statusCode
            }
        } else {
            Write-Host "‚ö†Ô∏è $Description" -ForegroundColor Yellow
            Write-Host "   URL: $Url" -ForegroundColor Gray
            Write-Host "   Status: $statusCode" -ForegroundColor Yellow

            $script:testResults += @{
                Endpoint = $Description
                Url = $Url
                Status = "‚ö†Ô∏è Warning"
                Code = $statusCode
            }
        }
    } catch {
        Write-Host "‚ùå $Description" -ForegroundColor Red
        Write-Host "   URL: $Url" -ForegroundColor Gray
        Write-Host "   Error: $($_.Exception.Message)" -ForegroundColor Red

        $script:testResults += @{
            Endpoint = $Description
            Url = $Url
            Status = "‚ùå Failed"
            Code = "Error"
        }
    }

    Write-Host ""
}

# –û—Å–Ω–æ–≤–Ω—ã–µ endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
Write-Host "üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–´–• ENDPOINTS" -ForegroundColor Yellow
Write-Host ""

$endpoints = @(
    @{ Url = "$baseUrl/"; Description = "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)" },
    @{ Url = "$baseUrl/health"; Description = "üè• Health Check" },
    @{ Url = "$baseUrl/docs"; Description = "üìö API Documentation" },
    @{ Url = "$baseUrl/api/modules"; Description = "üéØ Available Modules" },
    @{ Url = "$baseUrl/api/dashboard/stats"; Description = "üìä Dashboard Statistics" },
    @{ Url = "$baseUrl/api/clients"; Description = "üë• Clients API" },
    @{ Url = "$baseUrl/api/commissions"; Description = "üí∞ Commissions API" },
    @{ Url = "$baseUrl/api/consultants"; Description = "üëî Consultants API" },
    @{ Url = "$baseUrl/api/sales"; Description = "üìà Sales API" },
    @{ Url = "$baseUrl/api/processes"; Description = "‚öôÔ∏è Processes API" },
    @{ Url = "$baseUrl/api/finances"; Description = "üí∞ Finances API" },
    @{ Url = "$baseUrl/api/reports"; Description = "üìã Reports API" },
    @{ Url = "$baseUrl/api/settings"; Description = "‚öôÔ∏è Settings API" },
    @{ Url = "$baseUrl/api/ml_analytics/predictions"; Description = "üß† ML Analytics" },
    @{ Url = "$baseUrl/api/ai_analytics/insights"; Description = "ü§ñ AI Analytics" },
    @{ Url = "$baseUrl/api/properties"; Description = "üè† Properties API" },
    @{ Url = "$baseUrl/api/excellence/metrics"; Description = "üèÜ Excellence Metrics" },
    @{ Url = "$baseUrl/api/system/info"; Description = "‚ÑπÔ∏è System Information" }
)

foreach ($endpoint in $endpoints) {
    Test-Endpoint -Url $endpoint.Url -Description $endpoint.Description
}

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
Write-Host "üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø" -ForegroundColor Yellow
Write-Host "=" * 30 -ForegroundColor Gray

$successCount = ($testResults | Where-Object { $_.Status -eq "‚úÖ Success" }).Count
$warningCount = ($testResults | Where-Object { $_.Status -eq "‚ö†Ô∏è Warning" }).Count
$failedCount = ($testResults | Where-Object { $_.Status -eq "‚ùå Failed" }).Count
$totalCount = $testResults.Count

Write-Host "–í—Å–µ–≥–æ endpoints: $totalCount" -ForegroundColor Gray
Write-Host "‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: $successCount" -ForegroundColor Green
Write-Host "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warningCount" -ForegroundColor Yellow
Write-Host "‚ùå –û—à–∏–±–æ–∫: $failedCount" -ForegroundColor Red

$successRate = [math]::Round(($successCount / $totalCount) * 100, 1)
Write-Host ""
Write-Host "üéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: $successRate% —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤" -ForegroundColor Cyan

if ($successRate -ge 90) {
    Write-Host "üèÜ –û–¢–õ–ò–ß–ù–û! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!" -ForegroundColor Green
} elseif ($successRate -ge 75) {
    Write-Host "‚úÖ –•–û–†–û–®–û! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ" -ForegroundColor Green
} elseif ($successRate -ge 50) {
    Write-Host "‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–∞—Å—Ç–∏—á–Ω–æ" -ForegroundColor Yellow
} else {
    Write-Host "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã" -ForegroundColor Red
}

Write-Host ""
Write-Host "üåê –î–û–°–¢–£–ü–ù–´–ï –ê–î–†–ï–°–ê:" -ForegroundColor Yellow
Write-Host "‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8000" -ForegroundColor Cyan
Write-Host "‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs" -ForegroundColor Cyan
Write-Host "‚Ä¢ Health check: http://localhost:8000/health" -ForegroundColor Cyan
Write-Host "‚Ä¢ Frontend (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω): http://localhost:5173" -ForegroundColor Cyan

Write-Host ""
Write-Host "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
